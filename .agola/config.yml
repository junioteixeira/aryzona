version: v0

runs:
  - name: Aryzona CI

    # Build
    tasks:
      - name: build
        runtime:
          type: pod
          arch: amd64
          containers:
            - image: golang:1.18-stretch
        steps:
          - clone:
          - restore_cache:
              keys:
                - pkg-cache-sum-{{ md5sum "go.sum" }}-{{ year }}-{{ month }}
              dest_dir: /go/pkg
          - restore_cache:
              keys:
                - build-cache-sum-{{ md5sum "go.sum" }}-{{ year }}-{{ month }}
              dest_dir: /root/.cache/go-build
          # the deploy step does not have git, so let's save it for later...
          - run: git rev-list -1 HEAD --abbrev-commit > /root/project/commit.txt
          - run: make build
          - save_to_workspace:
              contents:
                - source_dir: /root/project/
                  dest_dir: /root/project/
                  paths:
                    - '**'
          - save_to_workspace:
              contents:
                - source_dir: /root/.cache/go-build
                  dest_dir: /root/.cache/go-build
                  paths:
                    - '**'
          - save_to_workspace:
              contents:
                - source_dir: /go/pkg
                  dest_dir: /go/pkg
                  paths:
                    - '**'

      # Test
      - name: test
        depends:
          - build
        runtime:
          type: pod
          arch: amd64
          containers:
            - image: golang:1.18-stretch
        steps:
          - restore_workspace:
              dest_dir: /
          - run: make test
          - save_cache:
              key: pkg-cache-sum-{{ md5sum "go.sum" }}-{{ year }}-{{ month }}
              contents:
                - source_dir: /go/pkg
          - save_cache:
              key: build-cache-sum-{{ md5sum "go.sum" }}-{{ year }}-{{ month }}
              contents:
                - source_dir: /root/.cache/go-build

      # Inspect code
      - name: inspect
        depends:
          - build
        runtime:
          type: pod
          arch: amd64
          containers:
            - image: golang:1.18-stretch
        steps:
          - restore_workspace:
              dest_dir: /
          - restore_cache:
              keys:
                - pkg-cache-staticcheck-{{ year }}-{{ month }}
              dest_dir: /root/.cache/staticcheck
          - restore_cache:
              keys:
                - pkg-cache-bin-{{ year }}-{{ month }}
              dest_dir: /go/bin
          - run:
              name: install inspect tools
              command: ./.agola/install_tools.sh
          - run: make inspect 
          - save_cache:
              key: pkg-cache-staticcheck-{{ year }}-{{ month }}
              contents:
                - source_dir: /root/.cache/staticcheck
                  paths: 
                    - '**'
          - save_cache:
              key: pkg-cache-bin-{{ year }}-{{ month }}
              contents:
                - source_dir: /go/bin
                  paths:
                    - revive
                    - gosec
                    - misspell
                    - staticcheck

      # Deploy (when the branch is master)
      - name: deploy
        when:
          branch: 
            - master
            - dev
        environment:
          REGISTRY_URL:
            from_variable: registry-url
          REGISTRY_TOKEN:
            from_variable: registry-token
          REGISTRY_IMAGE:
            from_variable: registry-image
        depends:
          - test
          - inspect
        runtime:
          containers:
            - image: gcr.io/kaniko-project/executor:debug
        shell: /busybox/sh
        steps:
          - restore_workspace:
              dest_dir: /
          - run: mv /root/project/* /workspace/ && mv /root/project/.git /workspace
          - run:
              name: generate docker config
              command: |
                cat << EOF > /kaniko/.docker/config.json
                {
                  "auths": {
                    "$REGISTRY_URL": { "auth" : "$REGISTRY_TOKEN" }
                  }
                }
                EOF
          - run:
              name: build docker image
              command:  |
                export COMMIT=$(cat /workspace/commit.txt)
                /kaniko/executor --destination $REGISTRY_URL/$REGISTRY_IMAGE:$COMMIT --destination $REGISTRY_URL/$REGISTRY_IMAGE:latest --force
